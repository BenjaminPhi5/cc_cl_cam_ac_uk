type token =
  | INT of (int)
  | IDENT of (string)
  | EOF
  | LPAREN
  | RPAREN
  | COMMA
  | COLON
  | SEMICOLON
  | ADD
  | SUB
  | MUL
  | NOT
  | EQUAL
  | LT
  | ANDOP
  | OROP
  | WHAT
  | UNIT
  | AND
  | TRUE
  | FALSE
  | IF
  | FI
  | THEN
  | ELSE
  | LET
  | REC
  | IN
  | BEGIN
  | END
  | BOOL
  | INTTYPE
  | UNITTYPE
  | ARROW
  | BAR
  | INL
  | INR
  | FST
  | SND
  | FUN
  | NUF
  | CASE
  | OF
  | REF
  | ASSIGN
  | BANG
  | WHILE
  | DO
  | OD

open Parsing;;
let _ = parse_error;;
# 5 "parser.mly"

let get_loc = Parsing.symbol_start_pos 

# 59 "parser.ml"
let yytransl_const = [|
    0 (* EOF *);
  259 (* LPAREN *);
  260 (* RPAREN *);
  261 (* COMMA *);
  262 (* COLON *);
  263 (* SEMICOLON *);
  264 (* ADD *);
  265 (* SUB *);
  266 (* MUL *);
  267 (* NOT *);
  268 (* EQUAL *);
  269 (* LT *);
  270 (* ANDOP *);
  271 (* OROP *);
  272 (* WHAT *);
  273 (* UNIT *);
  274 (* AND *);
  275 (* TRUE *);
  276 (* FALSE *);
  277 (* IF *);
  278 (* FI *);
  279 (* THEN *);
  280 (* ELSE *);
  281 (* LET *);
  282 (* REC *);
  283 (* IN *);
  284 (* BEGIN *);
  285 (* END *);
  286 (* BOOL *);
  287 (* INTTYPE *);
  288 (* UNITTYPE *);
  289 (* ARROW *);
  290 (* BAR *);
  291 (* INL *);
  292 (* INR *);
  293 (* FST *);
  294 (* SND *);
  295 (* FUN *);
  296 (* NUF *);
  297 (* CASE *);
  298 (* OF *);
  299 (* REF *);
  300 (* ASSIGN *);
  301 (* BANG *);
  302 (* WHILE *);
  303 (* DO *);
  304 (* OD *);
    0|]

let yytransl_block = [|
  257 (* INT *);
  258 (* IDENT *);
    0|]

let yylhs = "\255\255\
\001\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\004\000\004\000\004\000\004\000\
\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
\004\000\004\000\005\000\005\000\002\000\002\000\002\000\002\000\
\002\000\002\000\002\000\002\000\000\000"

let yylen = "\002\000\
\002\000\001\000\001\000\001\000\001\000\001\000\001\000\003\000\
\005\000\002\000\002\000\002\000\001\000\002\000\002\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\007\000\005\000\002\000\002\000\003\000\003\000\009\000\009\000\
\014\000\021\000\001\000\003\000\001\000\001\000\001\000\003\000\
\003\000\003\000\002\000\003\000\002\000"

let yydefred = "\000\000\
\000\000\000\000\003\000\005\000\000\000\000\000\000\000\004\000\
\002\000\006\000\007\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\045\000\
\013\000\000\000\000\000\015\000\010\000\000\000\000\000\000\000\
\000\000\000\000\037\000\038\000\039\000\000\000\000\000\000\000\
\000\000\000\000\000\000\012\000\011\000\000\000\001\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\000\
\008\000\000\000\000\000\000\000\000\000\000\000\024\000\000\000\
\000\000\000\000\000\000\043\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\036\000\044\000\043\000\
\000\000\000\000\000\000\000\000\000\000\000\000\009\000\000\000\
\000\000\000\000\000\000\000\000\026\000\000\000\000\000\000\000\
\000\000\000\000\025\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\032\000\031\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\000"

let yydgoto = "\002\000\
\024\000\038\000\025\000\032\000\033\000"

let yysindex = "\002\000\
\122\002\000\000\000\000\000\000\122\002\122\002\059\255\000\000\
\000\000\000\000\000\000\122\002\005\255\122\002\081\255\081\255\
\122\002\122\002\006\255\122\002\059\255\059\255\122\002\000\000\
\000\000\193\001\168\002\000\000\000\000\206\002\012\255\245\002\
\240\254\081\255\000\000\000\000\000\000\045\002\045\002\059\255\
\059\255\018\255\009\003\000\000\000\000\213\001\000\000\122\002\
\122\002\122\002\122\002\122\002\122\002\122\002\122\002\000\000\
\000\000\122\002\122\002\025\255\081\255\122\002\000\000\254\254\
\081\255\081\255\081\255\000\000\059\255\059\255\023\255\245\254\
\122\002\132\004\132\004\152\004\152\004\152\004\152\004\152\004\
\059\255\054\003\076\003\027\255\002\255\000\000\000\000\000\000\
\026\255\241\254\241\254\081\255\031\255\114\003\000\000\122\002\
\081\255\122\002\022\255\037\255\000\000\136\003\117\255\174\003\
\007\255\038\255\000\000\057\255\122\002\122\002\081\255\081\255\
\194\003\232\003\145\255\013\255\000\000\000\000\010\255\122\002\
\122\002\254\003\036\004\122\002\028\255\074\004\063\255\000\000\
\066\255\065\255\081\255\148\255\040\255\122\002\096\004\000\000"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\045\255\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\
\042\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\083\000\124\000\000\000\000\000\
\000\000\122\001\150\001\206\000\237\000\012\001\053\001\094\001\
\165\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\091\002\207\255\004\002\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"

let yygindex = "\000\000\
\000\000\110\000\060\000\255\255\015\000"

let yytablesize = 1477
let yytable = "\026\000\
\027\000\087\000\001\000\027\000\028\000\065\000\031\000\066\000\
\042\000\065\000\030\000\066\000\063\000\098\000\060\000\040\000\
\041\000\061\000\043\000\071\000\065\000\046\000\066\000\093\000\
\120\000\105\000\084\000\088\000\092\000\065\000\067\000\066\000\
\097\000\100\000\067\000\066\000\069\000\070\000\106\000\110\000\
\088\000\028\000\121\000\111\000\088\000\067\000\074\000\075\000\
\076\000\077\000\078\000\079\000\080\000\081\000\067\000\088\000\
\082\000\083\000\067\000\003\000\004\000\005\000\112\000\127\000\
\088\000\129\000\029\000\130\000\088\000\007\000\131\000\094\000\
\134\000\035\000\008\000\009\000\086\000\010\000\011\000\000\000\
\044\000\045\000\029\000\034\000\000\000\056\000\056\000\056\000\
\000\000\056\000\000\000\056\000\000\000\000\000\102\000\000\000\
\104\000\000\000\000\000\056\000\056\000\021\000\056\000\022\000\
\000\000\056\000\000\000\113\000\114\000\000\000\035\000\036\000\
\037\000\000\000\000\000\000\000\000\000\000\000\122\000\123\000\
\108\000\000\000\126\000\030\000\065\000\039\000\066\000\044\000\
\056\000\056\000\000\000\000\000\135\000\056\000\056\000\056\000\
\056\000\056\000\056\000\056\000\056\000\056\000\056\000\064\000\
\000\000\000\000\000\000\000\000\119\000\067\000\000\000\133\000\
\065\000\056\000\066\000\065\000\000\000\066\000\000\000\088\000\
\000\000\056\000\000\000\056\000\023\000\000\000\000\000\000\000\
\000\000\000\000\085\000\000\000\056\000\056\000\089\000\090\000\
\091\000\067\000\000\000\000\000\067\000\056\000\056\000\000\000\
\000\000\056\000\000\000\088\000\000\000\000\000\088\000\000\000\
\000\000\000\000\056\000\000\000\000\000\000\000\000\000\000\000\
\000\000\099\000\000\000\000\000\000\000\018\000\103\000\041\000\
\041\000\041\000\041\000\000\000\000\000\000\000\041\000\041\000\
\041\000\041\000\041\000\000\000\115\000\116\000\041\000\041\000\
\000\000\041\000\041\000\041\000\000\000\000\000\000\000\041\000\
\000\000\000\000\041\000\000\000\020\000\000\000\000\000\041\000\
\132\000\041\000\041\000\041\000\041\000\041\000\000\000\041\000\
\000\000\000\000\000\000\041\000\041\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\027\000\027\000\000\000\027\000\
\027\000\027\000\027\000\019\000\027\000\027\000\027\000\027\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\000\
\027\000\000\000\000\000\027\000\000\000\027\000\000\000\000\000\
\000\000\000\000\027\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\027\000\000\000\027\000\028\000\028\000\027\000\
\028\000\028\000\028\000\028\000\021\000\028\000\028\000\028\000\
\028\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\028\000\028\000\000\000\000\000\028\000\000\000\028\000\000\000\
\000\000\000\000\000\000\028\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\028\000\000\000\028\000\029\000\029\000\
\028\000\029\000\029\000\029\000\029\000\022\000\029\000\029\000\
\029\000\029\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\029\000\029\000\000\000\000\000\029\000\000\000\029\000\
\000\000\000\000\000\000\000\000\029\000\000\000\000\000\000\000\
\000\000\016\000\000\000\000\000\029\000\000\000\029\000\030\000\
\030\000\029\000\030\000\030\000\030\000\030\000\000\000\030\000\
\030\000\030\000\030\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\030\000\030\000\000\000\017\000\030\000\000\000\
\030\000\000\000\000\000\000\000\000\000\030\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\030\000\000\000\030\000\
\023\000\023\000\030\000\023\000\023\000\023\000\023\000\000\000\
\023\000\023\000\023\000\023\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\023\000\023\000\000\000\000\000\023\000\
\047\000\023\000\000\000\000\000\000\000\000\000\023\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\023\000\000\000\
\023\000\018\000\018\000\023\000\018\000\018\000\018\000\018\000\
\000\000\018\000\018\000\018\000\018\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\018\000\018\000\000\000\000\000\
\018\000\000\000\018\000\000\000\000\000\000\000\000\000\018\000\
\020\000\020\000\000\000\020\000\020\000\020\000\020\000\018\000\
\020\000\020\000\020\000\020\000\018\000\000\000\000\000\000\000\
\000\000\000\000\000\000\020\000\020\000\000\000\000\000\020\000\
\000\000\020\000\000\000\000\000\000\000\000\000\020\000\019\000\
\019\000\000\000\019\000\019\000\019\000\019\000\020\000\019\000\
\019\000\019\000\019\000\020\000\000\000\000\000\000\000\000\000\
\000\000\000\000\019\000\019\000\000\000\000\000\019\000\000\000\
\019\000\000\000\000\000\000\000\000\000\019\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\019\000\000\000\000\000\
\021\000\021\000\019\000\021\000\021\000\021\000\021\000\000\000\
\021\000\021\000\021\000\021\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\021\000\021\000\000\000\000\000\021\000\
\000\000\021\000\000\000\000\000\000\000\000\000\021\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\021\000\000\000\
\000\000\022\000\022\000\021\000\022\000\022\000\022\000\022\000\
\000\000\022\000\022\000\022\000\022\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\022\000\022\000\000\000\000\000\
\022\000\000\000\022\000\000\000\000\000\016\000\016\000\022\000\
\016\000\016\000\016\000\000\000\000\000\000\000\000\000\022\000\
\000\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\
\016\000\016\000\000\000\000\000\016\000\000\000\016\000\000\000\
\000\000\017\000\017\000\016\000\017\000\017\000\017\000\000\000\
\000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\
\016\000\000\000\000\000\000\000\017\000\017\000\000\000\000\000\
\017\000\000\000\017\000\000\000\000\000\000\000\000\000\017\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\000\
\000\000\003\000\004\000\005\000\017\000\000\000\000\000\000\000\
\048\000\049\000\050\000\007\000\051\000\052\000\053\000\054\000\
\008\000\009\000\000\000\010\000\011\000\003\000\004\000\005\000\
\000\000\000\000\000\000\000\000\048\000\049\000\050\000\007\000\
\051\000\052\000\053\000\054\000\008\000\009\000\000\000\010\000\
\011\000\000\000\000\000\021\000\055\000\022\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\000\
\055\000\022\000\000\000\073\000\040\000\040\000\040\000\040\000\
\000\000\000\000\000\000\040\000\040\000\040\000\040\000\040\000\
\000\000\000\000\000\000\040\000\040\000\000\000\040\000\040\000\
\040\000\000\000\000\000\000\000\040\000\000\000\000\000\040\000\
\000\000\000\000\000\000\000\000\040\000\000\000\040\000\040\000\
\040\000\040\000\040\000\000\000\040\000\003\000\004\000\005\000\
\040\000\040\000\000\000\000\000\065\000\006\000\066\000\007\000\
\000\000\000\000\000\000\000\000\008\000\009\000\000\000\010\000\
\011\000\012\000\000\000\000\000\000\000\013\000\000\000\000\000\
\014\000\000\000\000\000\000\000\000\000\067\000\000\000\015\000\
\016\000\017\000\018\000\019\000\000\000\020\000\000\000\068\000\
\000\000\022\000\023\000\042\000\042\000\042\000\042\000\000\000\
\000\000\000\000\042\000\042\000\000\000\042\000\042\000\000\000\
\000\000\000\000\042\000\042\000\000\000\042\000\042\000\042\000\
\000\000\000\000\000\000\042\000\000\000\000\000\042\000\000\000\
\000\000\000\000\003\000\004\000\005\000\042\000\042\000\042\000\
\042\000\042\000\006\000\042\000\007\000\000\000\000\000\042\000\
\042\000\008\000\009\000\000\000\010\000\011\000\012\000\000\000\
\000\000\000\000\013\000\000\000\000\000\014\000\000\000\000\000\
\000\000\000\000\000\000\000\000\015\000\016\000\017\000\018\000\
\019\000\000\000\020\000\000\000\021\000\000\000\022\000\023\000\
\003\000\004\000\005\000\057\000\058\000\000\000\000\000\048\000\
\049\000\050\000\007\000\051\000\052\000\053\000\054\000\008\000\
\009\000\000\000\010\000\011\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\003\000\004\000\
\005\000\000\000\021\000\055\000\022\000\048\000\049\000\050\000\
\007\000\051\000\052\000\053\000\054\000\008\000\009\000\000\000\
\010\000\011\000\000\000\000\000\059\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\003\000\004\000\005\000\
\021\000\055\000\022\000\062\000\048\000\049\000\050\000\007\000\
\051\000\052\000\053\000\054\000\008\000\009\000\000\000\010\000\
\011\000\003\000\004\000\005\000\000\000\000\000\000\000\000\000\
\048\000\049\000\050\000\007\000\051\000\052\000\053\000\054\000\
\008\000\009\000\000\000\010\000\011\000\000\000\000\000\021\000\
\055\000\022\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\072\000\021\000\055\000\022\000\003\000\004\000\
\005\000\095\000\000\000\000\000\000\000\048\000\049\000\050\000\
\007\000\051\000\052\000\053\000\054\000\008\000\009\000\000\000\
\010\000\011\000\000\000\000\000\003\000\004\000\005\000\000\000\
\000\000\000\000\000\000\048\000\049\000\050\000\007\000\051\000\
\052\000\053\000\054\000\008\000\009\000\000\000\010\000\011\000\
\021\000\055\000\022\000\096\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\003\000\004\000\005\000\000\000\021\000\055\000\
\022\000\048\000\049\000\050\000\007\000\051\000\052\000\053\000\
\054\000\008\000\009\000\000\000\010\000\011\000\000\000\000\000\
\003\000\004\000\005\000\000\000\000\000\000\000\101\000\048\000\
\049\000\050\000\007\000\051\000\052\000\053\000\054\000\008\000\
\009\000\000\000\010\000\011\000\021\000\055\000\022\000\000\000\
\000\000\000\000\000\000\000\000\107\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\003\000\004\000\
\005\000\000\000\021\000\055\000\022\000\048\000\049\000\050\000\
\007\000\051\000\052\000\053\000\054\000\008\000\009\000\000\000\
\010\000\011\000\003\000\004\000\005\000\000\000\000\000\000\000\
\109\000\048\000\049\000\050\000\007\000\051\000\052\000\053\000\
\054\000\008\000\009\000\000\000\010\000\011\000\000\000\000\000\
\021\000\055\000\022\000\000\000\000\000\000\000\117\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\003\000\004\000\005\000\000\000\021\000\055\000\022\000\048\000\
\049\000\050\000\007\000\051\000\052\000\053\000\054\000\008\000\
\009\000\000\000\010\000\011\000\000\000\000\000\003\000\004\000\
\005\000\000\000\000\000\000\000\118\000\048\000\049\000\050\000\
\007\000\051\000\052\000\053\000\054\000\008\000\009\000\000\000\
\010\000\011\000\021\000\055\000\022\000\000\000\000\000\000\000\
\124\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\003\000\004\000\005\000\000\000\
\021\000\055\000\022\000\048\000\049\000\050\000\007\000\051\000\
\052\000\053\000\054\000\008\000\009\000\000\000\010\000\011\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\125\000\000\000\000\000\
\000\000\000\000\003\000\004\000\005\000\000\000\021\000\055\000\
\022\000\048\000\049\000\050\000\007\000\051\000\052\000\053\000\
\054\000\008\000\009\000\000\000\010\000\011\000\000\000\000\000\
\003\000\004\000\005\000\000\000\000\000\000\000\128\000\048\000\
\049\000\050\000\007\000\051\000\052\000\053\000\054\000\008\000\
\009\000\000\000\010\000\011\000\021\000\055\000\022\000\000\000\
\000\000\000\000\000\000\000\000\136\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\003\000\004\000\005\000\000\000\
\000\000\000\000\021\000\055\000\022\000\050\000\007\000\051\000\
\052\000\053\000\054\000\008\000\009\000\000\000\010\000\011\000\
\003\000\004\000\005\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\007\000\000\000\000\000\000\000\000\000\008\000\
\009\000\000\000\010\000\011\000\000\000\000\000\021\000\055\000\
\022\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\021\000\055\000\022\000"

let yycheck = "\001\000\
\000\000\004\001\001\000\005\000\006\000\008\001\002\001\010\001\
\003\001\008\001\012\000\010\001\029\001\012\001\003\001\017\000\
\018\000\006\001\020\000\002\001\008\001\023\000\010\001\035\001\
\012\001\004\001\002\001\043\001\006\001\008\001\033\001\010\001\
\006\001\003\001\033\001\010\001\038\000\039\000\002\001\033\001\
\043\001\000\000\033\001\006\001\043\001\033\001\048\000\049\000\
\050\000\051\000\052\000\053\000\054\000\055\000\033\001\043\001\
\058\000\059\000\033\001\001\001\002\001\003\001\006\001\036\001\
\043\001\003\001\007\000\002\001\043\001\011\001\006\001\073\000\
\033\001\029\001\016\001\017\001\062\000\019\001\020\001\255\255\
\021\000\022\000\000\000\003\001\255\255\026\000\027\000\028\000\
\255\255\030\000\255\255\032\000\255\255\255\255\096\000\255\255\
\098\000\255\255\255\255\040\000\041\000\043\001\043\000\045\001\
\255\255\046\000\255\255\109\000\110\000\255\255\030\001\031\001\
\032\001\255\255\255\255\255\255\255\255\255\255\120\000\121\000\
\004\001\255\255\124\000\000\000\008\001\016\000\010\001\068\000\
\069\000\070\000\255\255\255\255\134\000\074\000\075\000\076\000\
\077\000\078\000\079\000\080\000\081\000\082\000\083\000\034\000\
\255\255\255\255\255\255\255\255\004\001\033\001\255\255\004\001\
\008\001\094\000\010\001\008\001\255\255\010\001\255\255\043\001\
\255\255\102\000\255\255\104\000\000\000\255\255\255\255\255\255\
\255\255\255\255\061\000\255\255\113\000\114\000\065\000\066\000\
\067\000\033\001\255\255\255\255\033\001\122\000\123\000\255\255\
\255\255\126\000\255\255\043\001\255\255\255\255\043\001\255\255\
\255\255\255\255\135\000\255\255\255\255\255\255\255\255\255\255\
\255\255\092\000\255\255\255\255\255\255\000\000\097\000\001\001\
\002\001\003\001\004\001\255\255\255\255\255\255\008\001\009\001\
\010\001\011\001\012\001\255\255\111\000\112\000\016\001\017\001\
\255\255\019\001\020\001\021\001\255\255\255\255\255\255\025\001\
\255\255\255\255\028\001\255\255\000\000\255\255\255\255\033\001\
\131\000\035\001\036\001\037\001\038\001\039\001\255\255\041\001\
\255\255\255\255\255\255\045\001\046\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\004\001\005\001\255\255\007\001\
\008\001\009\001\010\001\000\000\012\001\013\001\014\001\015\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\023\001\
\024\001\255\255\255\255\027\001\255\255\029\001\255\255\255\255\
\255\255\255\255\034\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\042\001\255\255\044\001\004\001\005\001\047\001\
\007\001\008\001\009\001\010\001\000\000\012\001\013\001\014\001\
\015\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\023\001\024\001\255\255\255\255\027\001\255\255\029\001\255\255\
\255\255\255\255\255\255\034\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\042\001\255\255\044\001\004\001\005\001\
\047\001\007\001\008\001\009\001\010\001\000\000\012\001\013\001\
\014\001\015\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\023\001\024\001\255\255\255\255\027\001\255\255\029\001\
\255\255\255\255\255\255\255\255\034\001\255\255\255\255\255\255\
\255\255\000\000\255\255\255\255\042\001\255\255\044\001\004\001\
\005\001\047\001\007\001\008\001\009\001\010\001\255\255\012\001\
\013\001\014\001\015\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\023\001\024\001\255\255\000\000\027\001\255\255\
\029\001\255\255\255\255\255\255\255\255\034\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\042\001\255\255\044\001\
\004\001\005\001\047\001\007\001\008\001\009\001\010\001\255\255\
\012\001\013\001\014\001\015\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\023\001\024\001\255\255\255\255\027\001\
\000\000\029\001\255\255\255\255\255\255\255\255\034\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\042\001\255\255\
\044\001\004\001\005\001\047\001\007\001\008\001\009\001\010\001\
\255\255\012\001\013\001\014\001\015\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\023\001\024\001\255\255\255\255\
\027\001\255\255\029\001\255\255\255\255\255\255\255\255\034\001\
\004\001\005\001\255\255\007\001\008\001\009\001\010\001\042\001\
\012\001\013\001\014\001\015\001\047\001\255\255\255\255\255\255\
\255\255\255\255\255\255\023\001\024\001\255\255\255\255\027\001\
\255\255\029\001\255\255\255\255\255\255\255\255\034\001\004\001\
\005\001\255\255\007\001\008\001\009\001\010\001\042\001\012\001\
\013\001\014\001\015\001\047\001\255\255\255\255\255\255\255\255\
\255\255\255\255\023\001\024\001\255\255\255\255\027\001\255\255\
\029\001\255\255\255\255\255\255\255\255\034\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\042\001\255\255\255\255\
\004\001\005\001\047\001\007\001\008\001\009\001\010\001\255\255\
\012\001\013\001\014\001\015\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\023\001\024\001\255\255\255\255\027\001\
\255\255\029\001\255\255\255\255\255\255\255\255\034\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\042\001\255\255\
\255\255\004\001\005\001\047\001\007\001\008\001\009\001\010\001\
\255\255\012\001\013\001\014\001\015\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\023\001\024\001\255\255\255\255\
\027\001\255\255\029\001\255\255\255\255\004\001\005\001\034\001\
\007\001\008\001\009\001\255\255\255\255\255\255\255\255\042\001\
\255\255\255\255\255\255\255\255\047\001\255\255\255\255\255\255\
\023\001\024\001\255\255\255\255\027\001\255\255\029\001\255\255\
\255\255\004\001\005\001\034\001\007\001\008\001\009\001\255\255\
\255\255\255\255\255\255\042\001\255\255\255\255\255\255\255\255\
\047\001\255\255\255\255\255\255\023\001\024\001\255\255\255\255\
\027\001\255\255\029\001\255\255\255\255\255\255\255\255\034\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\042\001\
\255\255\001\001\002\001\003\001\047\001\255\255\255\255\255\255\
\008\001\009\001\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\255\255\019\001\020\001\001\001\002\001\003\001\
\255\255\255\255\255\255\255\255\008\001\009\001\010\001\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\255\255\019\001\
\020\001\255\255\255\255\043\001\044\001\045\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\043\001\
\044\001\045\001\255\255\047\001\001\001\002\001\003\001\004\001\
\255\255\255\255\255\255\008\001\009\001\010\001\011\001\012\001\
\255\255\255\255\255\255\016\001\017\001\255\255\019\001\020\001\
\021\001\255\255\255\255\255\255\025\001\255\255\255\255\028\001\
\255\255\255\255\255\255\255\255\033\001\255\255\035\001\036\001\
\037\001\038\001\039\001\255\255\041\001\001\001\002\001\003\001\
\045\001\046\001\255\255\255\255\008\001\009\001\010\001\011\001\
\255\255\255\255\255\255\255\255\016\001\017\001\255\255\019\001\
\020\001\021\001\255\255\255\255\255\255\025\001\255\255\255\255\
\028\001\255\255\255\255\255\255\255\255\033\001\255\255\035\001\
\036\001\037\001\038\001\039\001\255\255\041\001\255\255\043\001\
\255\255\045\001\046\001\001\001\002\001\003\001\004\001\255\255\
\255\255\255\255\008\001\009\001\255\255\011\001\012\001\255\255\
\255\255\255\255\016\001\017\001\255\255\019\001\020\001\021\001\
\255\255\255\255\255\255\025\001\255\255\255\255\028\001\255\255\
\255\255\255\255\001\001\002\001\003\001\035\001\036\001\037\001\
\038\001\039\001\009\001\041\001\011\001\255\255\255\255\045\001\
\046\001\016\001\017\001\255\255\019\001\020\001\021\001\255\255\
\255\255\255\255\025\001\255\255\255\255\028\001\255\255\255\255\
\255\255\255\255\255\255\255\255\035\001\036\001\037\001\038\001\
\039\001\255\255\041\001\255\255\043\001\255\255\045\001\046\001\
\001\001\002\001\003\001\004\001\005\001\255\255\255\255\008\001\
\009\001\010\001\011\001\012\001\013\001\014\001\015\001\016\001\
\017\001\255\255\019\001\020\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\001\001\002\001\
\003\001\255\255\043\001\044\001\045\001\008\001\009\001\010\001\
\011\001\012\001\013\001\014\001\015\001\016\001\017\001\255\255\
\019\001\020\001\255\255\255\255\023\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\001\001\002\001\003\001\
\043\001\044\001\045\001\007\001\008\001\009\001\010\001\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\255\255\019\001\
\020\001\001\001\002\001\003\001\255\255\255\255\255\255\255\255\
\008\001\009\001\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\255\255\019\001\020\001\255\255\255\255\043\001\
\044\001\045\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\042\001\043\001\044\001\045\001\001\001\002\001\
\003\001\004\001\255\255\255\255\255\255\008\001\009\001\010\001\
\011\001\012\001\013\001\014\001\015\001\016\001\017\001\255\255\
\019\001\020\001\255\255\255\255\001\001\002\001\003\001\255\255\
\255\255\255\255\255\255\008\001\009\001\010\001\011\001\012\001\
\013\001\014\001\015\001\016\001\017\001\255\255\019\001\020\001\
\043\001\044\001\045\001\024\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\001\001\002\001\003\001\255\255\043\001\044\001\
\045\001\008\001\009\001\010\001\011\001\012\001\013\001\014\001\
\015\001\016\001\017\001\255\255\019\001\020\001\255\255\255\255\
\001\001\002\001\003\001\255\255\255\255\255\255\029\001\008\001\
\009\001\010\001\011\001\012\001\013\001\014\001\015\001\016\001\
\017\001\255\255\019\001\020\001\043\001\044\001\045\001\255\255\
\255\255\255\255\255\255\255\255\029\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\001\001\002\001\
\003\001\255\255\043\001\044\001\045\001\008\001\009\001\010\001\
\011\001\012\001\013\001\014\001\015\001\016\001\017\001\255\255\
\019\001\020\001\001\001\002\001\003\001\255\255\255\255\255\255\
\027\001\008\001\009\001\010\001\011\001\012\001\013\001\014\001\
\015\001\016\001\017\001\255\255\019\001\020\001\255\255\255\255\
\043\001\044\001\045\001\255\255\255\255\255\255\029\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\001\001\002\001\003\001\255\255\043\001\044\001\045\001\008\001\
\009\001\010\001\011\001\012\001\013\001\014\001\015\001\016\001\
\017\001\255\255\019\001\020\001\255\255\255\255\001\001\002\001\
\003\001\255\255\255\255\255\255\029\001\008\001\009\001\010\001\
\011\001\012\001\013\001\014\001\015\001\016\001\017\001\255\255\
\019\001\020\001\043\001\044\001\045\001\255\255\255\255\255\255\
\027\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\001\001\002\001\003\001\255\255\
\043\001\044\001\045\001\008\001\009\001\010\001\011\001\012\001\
\013\001\014\001\015\001\016\001\017\001\255\255\019\001\020\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\034\001\255\255\255\255\
\255\255\255\255\001\001\002\001\003\001\255\255\043\001\044\001\
\045\001\008\001\009\001\010\001\011\001\012\001\013\001\014\001\
\015\001\016\001\017\001\255\255\019\001\020\001\255\255\255\255\
\001\001\002\001\003\001\255\255\255\255\255\255\029\001\008\001\
\009\001\010\001\011\001\012\001\013\001\014\001\015\001\016\001\
\017\001\255\255\019\001\020\001\043\001\044\001\045\001\255\255\
\255\255\255\255\255\255\255\255\029\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\001\001\002\001\003\001\255\255\
\255\255\255\255\043\001\044\001\045\001\010\001\011\001\012\001\
\013\001\014\001\015\001\016\001\017\001\255\255\019\001\020\001\
\001\001\002\001\003\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\011\001\255\255\255\255\255\255\255\255\016\001\
\017\001\255\255\019\001\020\001\255\255\255\255\043\001\044\001\
\045\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\043\001\044\001\045\001"

let yynames_const = "\
  EOF\000\
  LPAREN\000\
  RPAREN\000\
  COMMA\000\
  COLON\000\
  SEMICOLON\000\
  ADD\000\
  SUB\000\
  MUL\000\
  NOT\000\
  EQUAL\000\
  LT\000\
  ANDOP\000\
  OROP\000\
  WHAT\000\
  UNIT\000\
  AND\000\
  TRUE\000\
  FALSE\000\
  IF\000\
  FI\000\
  THEN\000\
  ELSE\000\
  LET\000\
  REC\000\
  IN\000\
  BEGIN\000\
  END\000\
  BOOL\000\
  INTTYPE\000\
  UNITTYPE\000\
  ARROW\000\
  BAR\000\
  INL\000\
  INR\000\
  FST\000\
  SND\000\
  FUN\000\
  NUF\000\
  CASE\000\
  OF\000\
  REF\000\
  ASSIGN\000\
  BANG\000\
  WHILE\000\
  DO\000\
  OD\000\
  "

let yynames_block = "\
  INT\000\
  IDENT\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    Obj.repr(
# 40 "parser.mly"
           ( _1 )
# 631 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 49 "parser.mly"
                                     ( Past.Unit (get_loc()))
# 637 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 50 "parser.mly"
                                     ( Past.Integer (get_loc(), _1) )
# 644 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 51 "parser.mly"
                                     ( Past.What (get_loc()))
# 650 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 52 "parser.mly"
                                     ( Past.Var (get_loc(), _1) )
# 657 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 53 "parser.mly"
                                     ( Past.Boolean (get_loc(), true))
# 663 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 54 "parser.mly"
                                     ( Past.Boolean (get_loc(), false))
# 669 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    Obj.repr(
# 55 "parser.mly"
                                     ( _2 )
# 676 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : Past.expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    Obj.repr(
# 56 "parser.mly"
                                     ( Past.Pair(get_loc(), _2, _4) )
# 684 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 57 "parser.mly"
                                ( Past.UnaryOp(get_loc(), Past.NOT, _2) )
# 691 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 58 "parser.mly"
                                ( Past.Deref(get_loc(), _2) )
# 698 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 59 "parser.mly"
                                ( Past.Ref(get_loc(), _2) )
# 705 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 62 "parser.mly"
                                     (  _1 )
# 712 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 63 "parser.mly"
                                     ( Past.App (get_loc(), _1, _2) )
# 720 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 64 "parser.mly"
                                     ( Past.UnaryOp(get_loc(), Past.NEG, _2) )
# 727 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 65 "parser.mly"
                                     ( Past.Op(get_loc(), _1, Past.ADD, _3) )
# 735 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 66 "parser.mly"
                                     ( Past.Op(get_loc(), _1, Past.SUB, _3) )
# 743 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 67 "parser.mly"
                                     ( Past.Op(get_loc(), _1, Past.MUL, _3) )
# 751 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 68 "parser.mly"
                                     ( Past.Op(get_loc(), _1, Past.LT, _3) )
# 759 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 69 "parser.mly"
                                     ( Past.Op(get_loc(), _1, Past.EQ, _3) )
# 767 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 70 "parser.mly"
                                     ( Past.Op(get_loc(), _1, Past.AND, _3) )
# 775 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 71 "parser.mly"
                                     ( Past.Op(get_loc(), _1, Past.OR, _3) )
# 783 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 72 "parser.mly"
                                     ( Past.Assign(get_loc(), _1, _3) )
# 791 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : Past.expr list) in
    Obj.repr(
# 73 "parser.mly"
                                     ( Past.Seq(get_loc(), _2) )
# 798 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 5 : Past.expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 3 : Past.expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    Obj.repr(
# 74 "parser.mly"
                                      ( Past.If(get_loc(), _2, _4, _6) )
# 807 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : Past.expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    Obj.repr(
# 75 "parser.mly"
                                      ( Past.While(get_loc(), _2, _4) )
# 815 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 76 "parser.mly"
                                     ( Past.Fst(get_loc(), _2) )
# 822 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 77 "parser.mly"
                                     ( Past.Snd(get_loc(), _2) )
# 829 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : Past.type_expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 78 "parser.mly"
                                     ( Past.Inl(get_loc(), _2, _3) )
# 837 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : Past.type_expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 79 "parser.mly"
                                     ( Past.Inr(get_loc(), _2, _3) )
# 845 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 6 : string) in
    let _5 = (Parsing.peek_val __caml_parser_env 4 : Past.type_expr) in
    let _8 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    Obj.repr(
# 81 "parser.mly"
                                     ( Past.Lambda(get_loc(), (_3, _5, _8)) )
# 854 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 7 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 5 : Past.type_expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 3 : Past.expr) in
    let _8 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    Obj.repr(
# 82 "parser.mly"
                                                         ( Past.Let (get_loc(), _2, _4, _6, _8) )
# 864 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 12 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 10 : string) in
    let _6 = (Parsing.peek_val __caml_parser_env 8 : Past.type_expr) in
    let _9 = (Parsing.peek_val __caml_parser_env 5 : Past.type_expr) in
    let _11 = (Parsing.peek_val __caml_parser_env 3 : Past.expr) in
    let _13 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    Obj.repr(
# 84 "parser.mly"
                                     ( Past.LetFun (get_loc(), _2, (_4, _6, _11), _9, _13) )
# 876 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 19 : Past.expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 15 : string) in
    let _8 = (Parsing.peek_val __caml_parser_env 13 : Past.type_expr) in
    let _11 = (Parsing.peek_val __caml_parser_env 10 : Past.expr) in
    let _15 = (Parsing.peek_val __caml_parser_env 6 : string) in
    let _17 = (Parsing.peek_val __caml_parser_env 4 : Past.type_expr) in
    let _20 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    Obj.repr(
# 89 "parser.mly"
                                     ( Past.Case (get_loc(), _2, (_6, _8, _11), (_15, _17, _20)) )
# 889 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 92 "parser.mly"
                                     ( [_1] )
# 896 "parser.ml"
               : Past.expr list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr list) in
    Obj.repr(
# 93 "parser.mly"
                                     ( _1 :: _3  )
# 904 "parser.ml"
               : Past.expr list))
; (fun __caml_parser_env ->
    Obj.repr(
# 97 "parser.mly"
                                     ( Past.TEbool  )
# 910 "parser.ml"
               : Past.type_expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 98 "parser.mly"
                                     ( Past.TEint  )
# 916 "parser.ml"
               : Past.type_expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 99 "parser.mly"
                                     ( Past.TEunit  )
# 922 "parser.ml"
               : Past.type_expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.type_expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.type_expr) in
    Obj.repr(
# 100 "parser.mly"
                                     ( Past.TEarrow (_1, _3))
# 930 "parser.ml"
               : Past.type_expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.type_expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.type_expr) in
    Obj.repr(
# 101 "parser.mly"
                                     ( Past.TEproduct (_1, _3))
# 938 "parser.ml"
               : Past.type_expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.type_expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.type_expr) in
    Obj.repr(
# 102 "parser.mly"
                                     ( Past.TEunion (_1, _3))
# 946 "parser.ml"
               : Past.type_expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Past.type_expr) in
    Obj.repr(
# 103 "parser.mly"
                                     ( Past.TEref _1 )
# 953 "parser.ml"
               : Past.type_expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : Past.type_expr) in
    Obj.repr(
# 104 "parser.mly"
                                     ( _2 )
# 960 "parser.ml"
               : Past.type_expr))
(* Entry start *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let start (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : Past.expr)
